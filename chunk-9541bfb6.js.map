{"version":3,"sources":["webpack:///./src/components/mine/index.vue?9b8c","webpack:///./src/components/mine/dashboard.vue?1811","webpack:///src/components/mine/dashboard.vue","webpack:///./src/components/mine/dashboard.vue?d6e8","webpack:///./src/components/mine/dashboard.vue","webpack:///./src/components/mine/interface.vue?07e2","webpack:///src/components/mine/interface.vue","webpack:///./src/components/mine/interface.vue?58ee","webpack:///./src/components/mine/interface.vue","webpack:///src/components/mine/index.vue","webpack:///./src/components/mine/index.vue?e6bb","webpack:///./src/components/mine/index.vue","webpack:///./src/components/mine/interface.vue?92a1"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticRenderFns","attrs","section","cpu","value","node","net","component","_v","_s","miningCost","miningRate","total","burn","bonus","directives","name","rawName","expression","domProps","on","$event","target","composing","targetMiningRate","submit","range","Array","isArray","isAuto","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice"],"mappings":"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","file":"chunk-9541bfb6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container container-padding grid-md\"},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column col-6 col-sm-12\"},[_c('balance'),_c('dashboard')],1),_c('div',{staticClass:\"column col-6 col-sm-12\"},[_c('tinterface')],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section\"},[_c('div',{staticClass:\"section-item section-item-filled\"},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column col-4\"},[_c('vc-donut',{attrs:{\"sections\":[_vm.section('cpu')],\"size\":70,\"unit\":'%',\"thickness\":10,\"has-legend\":true,\"text\":_vm.cpu.value + '%',\"auto-adjust-text-size\":false}})],1),_c('div',{staticClass:\"column col-4\"},[_c('vc-donut',{attrs:{\"sections\":[_vm.section('node')],\"size\":70,\"unit\":'%',\"thickness\":10,\"has-legend\":true,\"text\":_vm.node.value + '%',\"auto-adjust-text-size\":false}})],1),_c('div',{staticClass:\"column col-4\"},[_c('vc-donut',{attrs:{\"sections\":[_vm.section('net')],\"size\":70,\"unit\":'%',\"thickness\":10,\"has-legend\":true,\"text\":_vm.net.value + '%',\"auto-adjust-text-size\":false}})],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"section\">\r\n        <div class=\"section-item section-item-filled\">\r\n            <div class=\"columns\">\r\n                <div class=\"column col-4\">\r\n                    <vc-donut :sections=\"[section('cpu')]\" :size=\"70\" :unit=\"'%'\" :thickness=\"10\" :has-legend=\"true\"\r\n                        :text=\"cpu.value + '%'\" :auto-adjust-text-size=\"false\" />\r\n                </div>\r\n                <div class=\"column col-4\">\r\n                    <vc-donut :sections=\"[section('node')]\" :size=\"70\" :unit=\"'%'\" :thickness=\"10\" :has-legend=\"true\"\r\n                        :text=\"node.value + '%'\" :auto-adjust-text-size=\"false\" />\r\n                </div>\r\n                <div class=\"column col-4\">\r\n                    <vc-donut :sections=\"[section('net')]\" :size=\"70\" :unit=\"'%'\" :thickness=\"10\" :has-legend=\"true\"\r\n                        :text=\"net.value + '%'\" :auto-adjust-text-size=\"false\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    // https://github.com/dumptyd/vue-css-donut-chart\r\n\r\n    import { mapState } from 'vuex'\r\n\r\n    export default {\r\n        data: () => ({\r\n            cpu: { value: 10, label: 'CPU', color: '#5490f1' },\r\n            node: { value: 90, label: 'SVX node', color: '#5490f1' },\r\n            net: { value: 70, label: 'NET', color: '#5490f1' },\r\n\r\n            polling: null\r\n        }),\r\n        computed: mapState({\r\n            eos: state => state.blockchain.eos,\r\n            scatter: state => state.blockchain.scatter,\r\n        }),\r\n        watch: {\r\n            scatter(val) {\r\n                if (val) this.getData()\r\n            },\r\n        },\r\n        mounted() {\r\n            // this.getData()\r\n            this.polling = setInterval(() => this.getData(), 1000)\r\n        },\r\n        beforeDestroy() {\r\n            if (this.polling) clearInterval(this.polling)\r\n        },\r\n        methods: {\r\n            section(name) {\r\n                let section = this[name]\r\n                section.color = name == 'node' ? this.setNodeColor(section.value) : this.setColor(section.value)\r\n                return section\r\n            },\r\n            setColor(value) {\r\n                if (value >= 0 && value <= 60) return '#00bb00'\r\n                if (value > 60 && value <= 75) return '#ffaa00'\r\n\r\n                return '#ff5555'\r\n            },\r\n            setNodeColor(value) {\r\n                if (value > 25 && value <= 50) return '#ffaa00'\r\n                if (value > 50 && value <= 75) return '#5bc0de'\r\n                if (value > 75 && value <= 99) return '#0275d8'\r\n                if (value > 99) return '#00bb00'\r\n\r\n                return '#ff5555'\r\n            },\r\n            getData() {\r\n                const percent = (val, val2) => (val < val2) ? (val / val2) * 100 : (val2 / val) * 100\r\n\r\n                this.eos.getAccount(this.scatter.name)\r\n                    .then(res => {\r\n                        const cpu = percent(res.cpu_limit.used, res.cpu_limit.max)\r\n                        const net = percent(res.net_limit.used, res.net_limit.max)\r\n                        const node = null\r\n\r\n                        this.cpu.value = parseFloat(cpu.toFixed(2))\r\n                        this.net.value = parseFloat(net.toFixed(2))\r\n\r\n                        this.getSVXNode()\r\n                    })\r\n\r\n            },\r\n            getSVXNode() {\r\n                this.eos.getTableRows({\r\n                    \"json\": \"true\",\r\n                    \"code\": \"svxmintofeos\",\r\n                    \"scope\": this.scatter.name,\r\n                    \"table\": \"accounts\"\r\n                }).then(res => {\r\n                    if (res) {\r\n                        const svxPower = parseFloat(res.rows[0].svxpower)\r\n\r\n                        const node = (svxPower / 777000) * 100\r\n                        this.node.value = Math.floor(node)\r\n                    }\r\n\r\n                }).catch(err => console.log(err))\r\n            }\r\n        },\r\n\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dashboard.vue?vue&type=template&id=3bc462fc&\"\nimport script from \"./dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section\"},[_c('div',{staticClass:\"section-item section-item-filled\"},[_c('div',{staticClass:\"toast mb\"},[_c('div',{staticClass:\"mb05\"},[_vm._v(\" Burn Mining \"),_c('span',{staticClass:\"text-primary\"},[_vm._v(\"1 SVX\")]),_vm._v(\" Burns \"),_c('span',{staticClass:\"text-warning text-semibold\"},[_vm._v(_vm._s(_vm.miningCost)+\" SOV\")])]),_c('ul',{staticClass:\"text-sm\"},[_c('li',[_vm._v(\"Reward per mining action: \"),_c('span',{staticClass:\"text-primary\"},[_vm._v(_vm._s(_vm.miningRate))]),_vm._v(\" SVX\")]),_c('li',[_vm._v(\"Reward per mining transaction: \"),_c('span',{staticClass:\"text-primary\"},[_vm._v(_vm._s(_vm.total.miningRate))]),_vm._v(\" SVX\")]),_c('li',[_vm._v(\"Total Burn per mining transaction: \"),_c('span',{staticClass:\"text-error\"},[_vm._v(_vm._s(_vm.total.burn))]),_vm._v(\" SOV\")]),_c('li',[_vm._v(\"Bonus for staking SVX: \"),_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.bonus)+\"%\")])])])]),_c('div',{staticClass:\"form-group mb05\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.targetMiningRate),expression:\"targetMiningRate\"}],staticClass:\"form-input\",attrs:{\"type\":\"number\",\"min\":\"0\",\"step\":\"0.01\",\"required\":\"\"},domProps:{\"value\":(_vm.targetMiningRate)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.targetMiningRate=$event.target.value}}}),_c('label',[_vm._v(\"Mining rate\")])]),_c('div',{staticClass:\"text-sm text-secondary mb\"},[_vm._v(\" Mine when single action reward is ≥ \"+_vm._s(_vm.targetMiningRate)+\" \")]),_c('button',{staticClass:\"btn btn-primary btn-block mb05\",on:{\"click\":_vm.submit}},[_vm._v(\" Burn mine x\"+_vm._s(_vm.range)+\" \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.range),expression:\"range\"}],staticClass:\"slider mb\",attrs:{\"type\":\"range\",\"min\":\"1\",\"max\":\"200\",\"step\":\"1\"},domProps:{\"value\":(_vm.range)},on:{\"__r\":function($event){_vm.range=$event.target.value}}}),_c('label',{staticClass:\"form-switch flex-centered-vertical\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isAuto),expression:\"isAuto\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isAuto)?_vm._i(_vm.isAuto,null)>-1:(_vm.isAuto)},on:{\"change\":function($event){var $$a=_vm.isAuto,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isAuto=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isAuto=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isAuto=$$c}}}}),_c('i',{staticClass:\"form-icon\"}),_c('span',{staticClass:\"text-secondary text-sm ml05\"},[_vm._v(\"Auto mine\")])])]),_c('div',{staticClass:\"text-sm text-secondary text-center\"},[_vm._v(\"Bundled burn mining actions per transaction\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"section\">\r\n        <div class=\"section-item section-item-filled\">\r\n            <div class=\"toast mb\">\r\n                <div class=\"mb05\"> Burn Mining <span class=\"text-primary\">1 SVX</span> Burns <span\r\n                        class=\"text-warning text-semibold\">{{miningCost}} SOV</span></div>\r\n                <ul class=\"text-sm\">\r\n                    <li>Reward per mining action: <span class=\"text-primary\">{{miningRate}}</span> SVX</li>\r\n                    <li>Reward per mining transaction: <span class=\"text-primary\">{{total.miningRate}}</span> SVX</li>\r\n                    <li>Total Burn per mining transaction: <span class=\"text-error\">{{total.burn}}</span> SOV</li>\r\n                    <li>Bonus for staking SVX: <span class=\"text-success\">{{bonus}}%</span></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"form-group mb05\">\r\n                <input type=\"number\" class=\"form-input\" v-model=\"targetMiningRate\" min=\"0\" step=\"0.01\" required>\r\n                <label>Mining rate</label>\r\n            </div>\r\n            <div class=\"text-sm text-secondary mb\">\r\n                Mine when single action reward is ≥ {{targetMiningRate}}\r\n            </div>\r\n\r\n            <button class=\"btn btn-primary btn-block mb05\" @click=\"submit\"> Burn mine x{{range}} </button>\r\n\r\n            <input type=\"range\" v-model=\"range\" min=\"1\" max=\"200\" step=\"1\" class=\"slider mb\">\r\n\r\n            <label class=\"form-switch flex-centered-vertical\">\r\n                <input type=\"checkbox\" v-model=\"isAuto\">\r\n                <i class=\"form-icon\"></i>\r\n                <span class=\"text-secondary text-sm ml05\">Auto mine</span>\r\n            </label>\r\n\r\n        </div>\r\n\r\n        <div class=\"text-sm text-secondary text-center\">Bundled burn mining actions per transaction</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex'\r\n\r\n    export default {\r\n        data: () => ({\r\n            targetMiningRate: 0,\r\n            quantity: 150, // default value\r\n            range: 1,\r\n            isAuto: false,\r\n\r\n            // statistic\r\n            miningRate: 0,\r\n            bonus: 0,\r\n\r\n            pollingIsAuto: null,\r\n            polling: null,\r\n        }),\r\n        computed: {\r\n            ...mapState({\r\n                eos: state => state.blockchain.eos,\r\n                scatter: state => state.blockchain.scatter,\r\n            }),\r\n            total() {\r\n                return {\r\n                    miningRate: parseFloat((this.miningRate * this.range).toFixed(4)) || 0,\r\n                    burn: parseFloat(((this.quantity * 0.014) * this.range).toFixed(2)) || 0,\r\n                }\r\n            },\r\n            miningCost() {\r\n                const cost = (this.total.burn / this.total.miningRate).toFixed(4)\r\n                return cost == Infinity ? 0 : cost\r\n            }\r\n        },\r\n        watch: {\r\n            scatter(val) {\r\n                if (val) this.getData()\r\n            },\r\n            isAuto(val) {\r\n                if (val) {\r\n                    this.submit() // init\r\n                    this.pollingIsAuto = setInterval(() => this.submit(), 5000) // 5s\r\n                    this.$notice.info('Auto mine <b>start</b>')\r\n\r\n                    return false\r\n                }\r\n\r\n                if (this.pollingIsAuto) {\r\n                    clearInterval(this.pollingIsAuto)\r\n                    this.$notice.warning('Auto mine <b>stop</b>')\r\n                }\r\n            },\r\n        },\r\n        mounted() {\r\n            //if (this.scatter) this.getData()\r\n            this.polling = setInterval(() => this.getData(), 1000)\r\n        },\r\n        beforeDestroy() {\r\n            // clear if component destroy\r\n            if (this.polling) clearInterval(this.polling)\r\n        },\r\n        methods: {\r\n            async getData() {\r\n                if (this.scatter && this.eos) {\r\n                    const svxMiningSupply = await this.eos.getTableRows({\r\n                        \"json\": \"true\",\r\n                        \"code\": \"svxmintofeos\",\r\n                        \"scope\": \"svxmintofeos\",\r\n                        \"table\": \"accounts\"\r\n                    }).then(res => parseFloat(res.rows[0].balance))\r\n\r\n                    const svxSupply = await this.eos.getTableRows({\r\n                        \"json\": \"true\",\r\n                        \"code\": \"svxmintofeos\",\r\n                        \"scope\": \"SVX\",\r\n                        \"table\": \"stat\"\r\n                    }).then(res => parseFloat(res.rows[0].supply))\r\n\r\n                    // user account\r\n                    const res = await this.eos.getTableRows({\r\n                        \"json\": \"true\",\r\n                        \"code\": \"svxmintofeos\",\r\n                        \"scope\": this.scatter.name,\r\n                        \"table\": \"accounts\"\r\n                    })\r\n\r\n                    if (svxMiningSupply, svxSupply, res) {\r\n                        const svxPower = res.rows[0].svxpower\r\n\r\n                        let bonusPercentage = (parseFloat(svxPower) / parseFloat(svxSupply)) * 10000\r\n                        bonusPercentage = bonusPercentage > 50 ? 50 : 0\r\n\r\n                        let miningRate = (svxMiningSupply / 20000) * (1 + (bonusPercentage / 100)) * 1 // mining_multiplier\r\n                        miningRate = this.miningRate = miningRate.toFixed(4)\r\n\r\n                        // set values\r\n                        this.miningRate = miningRate\r\n                        this.miningBonus = bonusPercentage\r\n                    }\r\n                }\r\n            },\r\n            submit() {\r\n                if (this.miningRate > this.targetMiningRate)\r\n                    this.eos.transaction({\r\n                        actions: [{\r\n                            account: 'sovmintofeos',\r\n                            name: 'transfer',\r\n                            authorization: [{\r\n                                actor: this.scatter.name,\r\n                                permission: \"active\"\r\n                            }],\r\n                            data: {\r\n                                \"from\": this.scatter.name,\r\n                                \"to\": 'sovdexrelays',\r\n                                \"quantity\": this.$options.filters.eosAmountFormat(this.quantity, 'SOV'),\r\n                                \"memo\": 'mine SVX'\r\n                            }\r\n\r\n                        }]\r\n                    }).then(() => {\r\n                        console.log('[mine] Success')\r\n                        if (!this.isAuto) this.$notice.success('Mine success')\r\n                    }).catch(error => console.error(error))\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    ul {\r\n        margin: 0;\r\n\r\n        li {\r\n            margin-top: 0;\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interface.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interface.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./interface.vue?vue&type=template&id=80ffd2b2&scoped=true&\"\nimport script from \"./interface.vue?vue&type=script&lang=js&\"\nexport * from \"./interface.vue?vue&type=script&lang=js&\"\nimport style0 from \"./interface.vue?vue&type=style&index=0&id=80ffd2b2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"80ffd2b2\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"container container-padding grid-md\">\r\n        <div class=\"columns\">\r\n            <div class=\"column col-6 col-sm-12\">\r\n                <balance />\r\n                <dashboard />\r\n            </div>\r\n            <div class=\"column col-6 col-sm-12\">\r\n                <tinterface />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import dashboard from './dashboard'\r\n    import tinterface from './interface'\r\n\r\n\r\n    export default {\r\n        components: {\r\n            dashboard,\r\n            tinterface,\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0d04c557&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interface.vue?vue&type=style&index=0&id=80ffd2b2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./interface.vue?vue&type=style&index=0&id=80ffd2b2&lang=scss&scoped=true&\""],"sourceRoot":""}